.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FINDGENECLUSTERSINREADS 1"
.TH FINDGENECLUSTERSINREADS 1 "2013-05-05" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
FindGeneClustersInReads.pl \-\- pulling out reads mapping to a gene cluster
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
FindGeneClustersInReads.pl [flags] < clusterID_file.txt
.SS "Required flags"
.IX Subsection "Required flags"
.IP "\-index" 4
.IX Item "-index"
Index file listing *sam files & \s-1FIG\s0 IDs.
.Sp
2 column (*txt): \s-1FILE\s0.sam \s-1FIG\s0
.IP "\-runID" 4
.IX Item "-runID"
\&\s-1ITEP\s0 Run \s-1ID\s0 for the clusters of interest.
.SS "Optional flags"
.IX Subsection "Optional flags"
.IP "\-outdir" 4
.IX Item "-outdir"
Output directory name (location of all mapped read files). [./Mapped2GeneCluster/]
.IP "\-extend" 4
.IX Item "-extend"
Number of base pairs to extend around the gene of interest (5' & 3'). [100]
.IP "\-column" 4
.IX Item "-column"
Cluster \s-1ID\s0 column in clusterID_file (starts at 1). [2]
.IP "\-fork" 4
.IX Item "-fork"
Number of \s-1SAM\s0 files to process in parallel. [1]
.IP "\-bitwise" 4
.IX Item "-bitwise"
Use \s-1SAM\s0 bitwise flag to return read to original orientation (i.e. rev/rev\-comp read)
.IP "\-v	Verbose output. [\s-1TRUE\s0]" 4
.IX Item "-v	Verbose output. [TRUE]"
.PD 0
.IP "\-h	This help message" 4
.IX Item "-h	This help message"
.PD
.SS "For more information:"
.IX Subsection "For more information:"
perldoc FindGeneClustersInReads.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Pull out all reads mapping to each gene (& region around the gene)
in each gene cluster.
.SS "output files"
.IX Subsection "output files"
File prefix = 'clust#'
.PP
\&'_FR.fna' = Just paired-end reads that both mapped to the gene region
.PP
\&'_A.fna' = All reads that mapped to the gene region
.SS "\s-1SAM\s0 files"
.IX Subsection "SAM files"
Reads from a genome of interest (e.g. a draft genome) should be mapped
onto all other genomes (producing the \s-1SAM\s0 files required).
.PP
You do not need to provide a *sam file for each \s-1FIG\s0 in each gene cluster;
however, genes from any genomes lacking *sam files will be skipped (ie. 
no reads pulled out for those genes; less total reads for the local assembly)
.PP
Multiple mappings are allowed for the same file (e.g. bowtie2 with '\-k' flag).
.SS "Requires"
.IX Subsection "Requires"
\&\s-1ITEP\s0 must be setup so that it can be queried.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Mapping reads to genomes"
.IX Subsection "Mapping reads to genomes"
$ bowtie2\-build genome1.fna genome1
.PP
$ bowtie2 \-x genome1 \-S genome1.sam \-1 reads_F.fq \-2 reads_R.fq \-k 10
.SS "Make an index file"
.IX Subsection "Make an index file"
column1 = *sam file location
.PP
column2 = \s-1FIG\s0 \s-1ID\s0
.SS "Get some gene clusters of interest"
.IX Subsection "Get some gene clusters of interest"
$ db_getAllClusterRuns.py | grep \*(L"mazei_I\*(R" | 
db_getClustersWithAnnotation.py \*(L"methyl coenzyme M reductase\*(R" >
mcr_clust.txt
.SS "Finding reads that mapped to each gene in the gene clusters of interest"
.IX Subsection "Finding reads that mapped to each gene in the gene clusters of interest"
FindGeneClustersInReads.pl \-in index.txt \-runID all_I_2.0_c_0.4_m_maxbit < mcr_clust.txt
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Youngblut <nyoungb2@illinois.edu>
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
sharchaea.life.uiuc.edu:/home/git/ITEP_PopGen/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, 2011
This software is licensed under the terms of the GPLv3
